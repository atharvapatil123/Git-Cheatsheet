git status//To show status of current repository
git init//To initialize a git repository , to make that folder as .git, make an empty git repository
git add --a//When files are untracked, then it is used to track the files
git add --a//Add all files to staging area
git restore --staged name_of_file//To unstage staged file
git checkout -- file_name//to unmodify the file, or restore the contents of the file as that of the previous commit
git checkout -f//to unmodify the file, or restore the contents of ALL file as that of the previous commit
git add new.txt new_word.docx//Add only specific file to staging area
git commit -m "some commit message"//Commit files in staging area with commit message
git log//Check all past commits info
git log -p// Gives log alongwith the changes or diff in detail
git log -p -2//Limits the commits to 2
git log ---stat //give short summary about the commits 
git log --pretty=oneline//Shows log commits in oneline
git log --pretty=short
git log --pretty=full
git log --since=2.days//Last 2 days info days/months/weeks etc
git log --pretty=format:"%h -- %an"
rm -rf .git//Delete .git repositiory
git clone url new-name//Cloning a Remote Git Repository from GitHub 
git commit --amend//Add our change to previous changed commit of our own
i
escape + :wq
The files which git tracks is a repository

git diff//Compares working directory and staging area.
git diff --staged//Compares last commit(or working tree content) with staging area. .
checksumm.
git commit -a -m "message"//Add tracked files directly from modified working tree to commit, without staging area